// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "xueyouchen",
            "email": "xueyou@starboardventures.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/contract/{address}": {
            "get": {
                "description": "Get contract detail",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "DATA-INFRA-API-External-V1"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Contract"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseWithRequestId"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseWithRequestId"
                        }
                    }
                }
            }
        },
        "/api/v1/contract/{address}/internal_txns": {
            "get": {
                "description": "List contract's internal transactions",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "DATA-INFRA-API-External-V1"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "l",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/busi.EVMInternalTX"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseWithRequestId"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseWithRequestId"
                        }
                    }
                }
            }
        },
        "/api/v1/contract/{address}/txns": {
            "get": {
                "description": "List contract's transactions",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "DATA-INFRA-API-External-V1"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "l",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "o",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/busi.EVMTransaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseWithRequestId"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseWithRequestId"
                        }
                    }
                }
            }
        },
        "/api/v1/contracts": {
            "get": {
                "description": "List contracts",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "DATA-INFRA-API-External-V1"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "name": "l",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "o",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.Contract"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseWithRequestId"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseWithRequestId"
                        }
                    }
                }
            }
        },
        "/api/v1/ping": {
            "get": {
                "description": "Healthy examination",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "Sys"
                ],
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error:...",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "busi.EVMInternalTX": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "parent_hash": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "busi.EVMTransaction": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "type": "string"
                },
                "block_number": {
                    "type": "integer"
                },
                "chain_id": {
                    "type": "integer"
                },
                "from": {
                    "type": "string"
                },
                "gas": {
                    "type": "integer"
                },
                "gas_limit": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "input": {
                    "type": "string"
                },
                "max_fee_per_gas": {
                    "type": "string"
                },
                "max_priority_fee_per_gas": {
                    "type": "string"
                },
                "nonce": {
                    "type": "integer"
                },
                "r": {
                    "type": "string"
                },
                "s": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "transaction_index": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "v": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "core.Contract": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "balance": {
                    "type": "integer"
                },
                "compiler": {
                    "type": "string"
                },
                "filecoinAddress": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "txns": {
                    "type": "integer"
                },
                "verified": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "utils.ResponseWithRequestId": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "block-explorer-api.spacescope.io",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "api server",
	Description:      "spacescope block explorer api server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
